#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AZUS_Transport.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ASUZ_Transport_DB")]
	public partial class MyDataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertApplications(Applications instance);
    partial void UpdateApplications(Applications instance);
    partial void DeleteApplications(Applications instance);
    partial void InsertCars(Cars instance);
    partial void UpdateCars(Cars instance);
    partial void DeleteCars(Cars instance);
    partial void InsertDivisions(Divisions instance);
    partial void UpdateDivisions(Divisions instance);
    partial void DeleteDivisions(Divisions instance);
    partial void InsertModelCars(ModelCars instance);
    partial void UpdateModelCars(ModelCars instance);
    partial void DeleteModelCars(ModelCars instance);
    partial void InsertStatusCars(StatusCars instance);
    partial void UpdateStatusCars(StatusCars instance);
    partial void DeleteStatusCars(StatusCars instance);
    partial void InsertStatuses(Statuses instance);
    partial void UpdateStatuses(Statuses instance);
    partial void DeleteStatuses(Statuses instance);
    partial void InsertStatusesDone(StatusesDone instance);
    partial void UpdateStatusesDone(StatusesDone instance);
    partial void DeleteStatusesDone(StatusesDone instance);
    partial void InsertTypeCars(TypeCars instance);
    partial void UpdateTypeCars(TypeCars instance);
    partial void DeleteTypeCars(TypeCars instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    #endregion
		
		public MyDataModelDataContext() : 
				base(global::AZUS_Transport.Properties.Settings.Default.ASUZ_Transport_DBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Applications> Applications
		{
			get
			{
				return this.GetTable<Applications>();
			}
		}
		
		public System.Data.Linq.Table<Cars> Cars
		{
			get
			{
				return this.GetTable<Cars>();
			}
		}
		
		public System.Data.Linq.Table<Divisions> Divisions
		{
			get
			{
				return this.GetTable<Divisions>();
			}
		}
		
		public System.Data.Linq.Table<ModelCars> ModelCars
		{
			get
			{
				return this.GetTable<ModelCars>();
			}
		}
		
		public System.Data.Linq.Table<StatusCars> StatusCars
		{
			get
			{
				return this.GetTable<StatusCars>();
			}
		}
		
		public System.Data.Linq.Table<Statuses> Statuses
		{
			get
			{
				return this.GetTable<Statuses>();
			}
		}
		
		public System.Data.Linq.Table<StatusesDone> StatusesDone
		{
			get
			{
				return this.GetTable<StatusesDone>();
			}
		}
		
		public System.Data.Linq.Table<TypeCars> TypeCars
		{
			get
			{
				return this.GetTable<TypeCars>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationAgreedView> ApplicationAgreedView
		{
			get
			{
				return this.GetTable<ApplicationAgreedView>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationView> ApplicationView
		{
			get
			{
				return this.GetTable<ApplicationView>();
			}
		}
		
		public System.Data.Linq.Table<CarModelView> CarModelView
		{
			get
			{
				return this.GetTable<CarModelView>();
			}
		}
		
		public System.Data.Linq.Table<CarView> CarView
		{
			get
			{
				return this.GetTable<CarView>();
			}
		}
		
		public System.Data.Linq.Table<ModelCarView> ModelCarView
		{
			get
			{
				return this.GetTable<ModelCarView>();
			}
		}
		
		public System.Data.Linq.Table<DivisionView> DivisionView
		{
			get
			{
				return this.GetTable<DivisionView>();
			}
		}
		
		public System.Data.Linq.Table<TypeCarView> TypeCarView
		{
			get
			{
				return this.GetTable<TypeCarView>();
			}
		}
		
		public System.Data.Linq.Table<UserView> UserView
		{
			get
			{
				return this.GetTable<UserView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applications")]
	public partial class Applications : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserID;
		
		private string _CPC;
		
		private System.Nullable<bool> _IntercityСity;
		
		private string _PurposeUsingTransport;
		
		private System.Nullable<bool> _Days;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.DateTime _DateCreation;
		
		private int _TypeCarID;
		
		private System.Nullable<int> _QuantityPassengers;
		
		private System.Nullable<double> _CargoWeight;
		
		private System.Nullable<int> _CarID;
		
		private string _PlaceSubmission;
		
		private string _Route;
		
		private string _CommentClient;
		
		private string _СommentDirector;
		
		private string _СommentEconomist;
		
		private string _СommentDepartment;
		
		private string _СommentDispatcherNIIAR;
		
		private string _СommentDispatcherATA;
		
		private int _DirectorStatusDoneID;
		
		private int _EconomistStatusDoneID;
		
		private int _DepartmentStatusDoneID;
		
		private int _DispatcherNIIAR_StatusDoneID;
		
		private int _DispatcherATA_StatusDoneID;
		
		private System.Nullable<bool> _SelectionApplicationJoin;
		
		private string _ApplicationJoin;
		
		private EntityRef<Cars> _Cars;
		
		private EntityRef<StatusesDone> _StatusesDone;
		
		private EntityRef<StatusesDone> _StatusesDone1;
		
		private EntityRef<StatusesDone> _StatusesDone2;
		
		private EntityRef<StatusesDone> _StatusesDone3;
		
		private EntityRef<StatusesDone> _StatusesDone4;
		
		private EntityRef<TypeCars> _TypeCars;
		
		private EntityRef<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCPCChanging(string value);
    partial void OnCPCChanged();
    partial void OnIntercityСityChanging(System.Nullable<bool> value);
    partial void OnIntercityСityChanged();
    partial void OnPurposeUsingTransportChanging(string value);
    partial void OnPurposeUsingTransportChanged();
    partial void OnDaysChanging(System.Nullable<bool> value);
    partial void OnDaysChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnDateCreationChanging(System.DateTime value);
    partial void OnDateCreationChanged();
    partial void OnTypeCarIDChanging(int value);
    partial void OnTypeCarIDChanged();
    partial void OnQuantityPassengersChanging(System.Nullable<int> value);
    partial void OnQuantityPassengersChanged();
    partial void OnCargoWeightChanging(System.Nullable<double> value);
    partial void OnCargoWeightChanged();
    partial void OnCarIDChanging(System.Nullable<int> value);
    partial void OnCarIDChanged();
    partial void OnPlaceSubmissionChanging(string value);
    partial void OnPlaceSubmissionChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    partial void OnCommentClientChanging(string value);
    partial void OnCommentClientChanged();
    partial void OnСommentDirectorChanging(string value);
    partial void OnСommentDirectorChanged();
    partial void OnСommentEconomistChanging(string value);
    partial void OnСommentEconomistChanged();
    partial void OnСommentDepartmentChanging(string value);
    partial void OnСommentDepartmentChanged();
    partial void OnСommentDispatcherNIIARChanging(string value);
    partial void OnСommentDispatcherNIIARChanged();
    partial void OnСommentDispatcherATAChanging(string value);
    partial void OnСommentDispatcherATAChanged();
    partial void OnDirectorStatusDoneIDChanging(int value);
    partial void OnDirectorStatusDoneIDChanged();
    partial void OnEconomistStatusDoneIDChanging(int value);
    partial void OnEconomistStatusDoneIDChanged();
    partial void OnDepartmentStatusDoneIDChanging(int value);
    partial void OnDepartmentStatusDoneIDChanged();
    partial void OnDispatcherNIIAR_StatusDoneIDChanging(int value);
    partial void OnDispatcherNIIAR_StatusDoneIDChanged();
    partial void OnDispatcherATA_StatusDoneIDChanging(int value);
    partial void OnDispatcherATA_StatusDoneIDChanged();
    partial void OnSelectionApplicationJoinChanging(System.Nullable<bool> value);
    partial void OnSelectionApplicationJoinChanged();
    partial void OnApplicationJoinChanging(string value);
    partial void OnApplicationJoinChanged();
    #endregion
		
		public Applications()
		{
			this._Cars = default(EntityRef<Cars>);
			this._StatusesDone = default(EntityRef<StatusesDone>);
			this._StatusesDone1 = default(EntityRef<StatusesDone>);
			this._StatusesDone2 = default(EntityRef<StatusesDone>);
			this._StatusesDone3 = default(EntityRef<StatusesDone>);
			this._StatusesDone4 = default(EntityRef<StatusesDone>);
			this._TypeCars = default(EntityRef<TypeCars>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPC", DbType="NVarChar(50)")]
		public string CPC
		{
			get
			{
				return this._CPC;
			}
			set
			{
				if ((this._CPC != value))
				{
					this.OnCPCChanging(value);
					this.SendPropertyChanging();
					this._CPC = value;
					this.SendPropertyChanged("CPC");
					this.OnCPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntercityСity", DbType="Bit")]
		public System.Nullable<bool> IntercityСity
		{
			get
			{
				return this._IntercityСity;
			}
			set
			{
				if ((this._IntercityСity != value))
				{
					this.OnIntercityСityChanging(value);
					this.SendPropertyChanging();
					this._IntercityСity = value;
					this.SendPropertyChanged("IntercityСity");
					this.OnIntercityСityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeUsingTransport", DbType="VarChar(500)")]
		public string PurposeUsingTransport
		{
			get
			{
				return this._PurposeUsingTransport;
			}
			set
			{
				if ((this._PurposeUsingTransport != value))
				{
					this.OnPurposeUsingTransportChanging(value);
					this.SendPropertyChanging();
					this._PurposeUsingTransport = value;
					this.SendPropertyChanged("PurposeUsingTransport");
					this.OnPurposeUsingTransportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Bit")]
		public System.Nullable<bool> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this.OnDateCreationChanging(value);
					this.SendPropertyChanging();
					this._DateCreation = value;
					this.SendPropertyChanged("DateCreation");
					this.OnDateCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCarID", DbType="Int NOT NULL")]
		public int TypeCarID
		{
			get
			{
				return this._TypeCarID;
			}
			set
			{
				if ((this._TypeCarID != value))
				{
					if (this._TypeCars.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeCarIDChanging(value);
					this.SendPropertyChanging();
					this._TypeCarID = value;
					this.SendPropertyChanged("TypeCarID");
					this.OnTypeCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityPassengers", DbType="Int")]
		public System.Nullable<int> QuantityPassengers
		{
			get
			{
				return this._QuantityPassengers;
			}
			set
			{
				if ((this._QuantityPassengers != value))
				{
					this.OnQuantityPassengersChanging(value);
					this.SendPropertyChanging();
					this._QuantityPassengers = value;
					this.SendPropertyChanged("QuantityPassengers");
					this.OnQuantityPassengersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CargoWeight", DbType="Float")]
		public System.Nullable<double> CargoWeight
		{
			get
			{
				return this._CargoWeight;
			}
			set
			{
				if ((this._CargoWeight != value))
				{
					this.OnCargoWeightChanging(value);
					this.SendPropertyChanging();
					this._CargoWeight = value;
					this.SendPropertyChanged("CargoWeight");
					this.OnCargoWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", DbType="Int")]
		public System.Nullable<int> CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					if (this._Cars.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceSubmission", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string PlaceSubmission
		{
			get
			{
				return this._PlaceSubmission;
			}
			set
			{
				if ((this._PlaceSubmission != value))
				{
					this.OnPlaceSubmissionChanging(value);
					this.SendPropertyChanging();
					this._PlaceSubmission = value;
					this.SendPropertyChanged("PlaceSubmission");
					this.OnPlaceSubmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentClient", DbType="VarChar(500)")]
		public string CommentClient
		{
			get
			{
				return this._CommentClient;
			}
			set
			{
				if ((this._CommentClient != value))
				{
					this.OnCommentClientChanging(value);
					this.SendPropertyChanging();
					this._CommentClient = value;
					this.SendPropertyChanged("CommentClient");
					this.OnCommentClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDirector", DbType="VarChar(500)")]
		public string СommentDirector
		{
			get
			{
				return this._СommentDirector;
			}
			set
			{
				if ((this._СommentDirector != value))
				{
					this.OnСommentDirectorChanging(value);
					this.SendPropertyChanging();
					this._СommentDirector = value;
					this.SendPropertyChanged("СommentDirector");
					this.OnСommentDirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentEconomist", DbType="VarChar(500)")]
		public string СommentEconomist
		{
			get
			{
				return this._СommentEconomist;
			}
			set
			{
				if ((this._СommentEconomist != value))
				{
					this.OnСommentEconomistChanging(value);
					this.SendPropertyChanging();
					this._СommentEconomist = value;
					this.SendPropertyChanged("СommentEconomist");
					this.OnСommentEconomistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDepartment", DbType="VarChar(500)")]
		public string СommentDepartment
		{
			get
			{
				return this._СommentDepartment;
			}
			set
			{
				if ((this._СommentDepartment != value))
				{
					this.OnСommentDepartmentChanging(value);
					this.SendPropertyChanging();
					this._СommentDepartment = value;
					this.SendPropertyChanged("СommentDepartment");
					this.OnСommentDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDispatcherNIIAR", DbType="VarChar(500)")]
		public string СommentDispatcherNIIAR
		{
			get
			{
				return this._СommentDispatcherNIIAR;
			}
			set
			{
				if ((this._СommentDispatcherNIIAR != value))
				{
					this.OnСommentDispatcherNIIARChanging(value);
					this.SendPropertyChanging();
					this._СommentDispatcherNIIAR = value;
					this.SendPropertyChanged("СommentDispatcherNIIAR");
					this.OnСommentDispatcherNIIARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDispatcherATA", DbType="VarChar(500)")]
		public string СommentDispatcherATA
		{
			get
			{
				return this._СommentDispatcherATA;
			}
			set
			{
				if ((this._СommentDispatcherATA != value))
				{
					this.OnСommentDispatcherATAChanging(value);
					this.SendPropertyChanging();
					this._СommentDispatcherATA = value;
					this.SendPropertyChanged("СommentDispatcherATA");
					this.OnСommentDispatcherATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorStatusDoneID", DbType="Int NOT NULL")]
		public int DirectorStatusDoneID
		{
			get
			{
				return this._DirectorStatusDoneID;
			}
			set
			{
				if ((this._DirectorStatusDoneID != value))
				{
					if (this._StatusesDone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectorStatusDoneIDChanging(value);
					this.SendPropertyChanging();
					this._DirectorStatusDoneID = value;
					this.SendPropertyChanged("DirectorStatusDoneID");
					this.OnDirectorStatusDoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EconomistStatusDoneID", DbType="Int NOT NULL")]
		public int EconomistStatusDoneID
		{
			get
			{
				return this._EconomistStatusDoneID;
			}
			set
			{
				if ((this._EconomistStatusDoneID != value))
				{
					if (this._StatusesDone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEconomistStatusDoneIDChanging(value);
					this.SendPropertyChanging();
					this._EconomistStatusDoneID = value;
					this.SendPropertyChanged("EconomistStatusDoneID");
					this.OnEconomistStatusDoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentStatusDoneID", DbType="Int NOT NULL")]
		public int DepartmentStatusDoneID
		{
			get
			{
				return this._DepartmentStatusDoneID;
			}
			set
			{
				if ((this._DepartmentStatusDoneID != value))
				{
					if (this._StatusesDone3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentStatusDoneIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentStatusDoneID = value;
					this.SendPropertyChanged("DepartmentStatusDoneID");
					this.OnDepartmentStatusDoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatcherNIIAR_StatusDoneID", DbType="Int NOT NULL")]
		public int DispatcherNIIAR_StatusDoneID
		{
			get
			{
				return this._DispatcherNIIAR_StatusDoneID;
			}
			set
			{
				if ((this._DispatcherNIIAR_StatusDoneID != value))
				{
					if (this._StatusesDone2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispatcherNIIAR_StatusDoneIDChanging(value);
					this.SendPropertyChanging();
					this._DispatcherNIIAR_StatusDoneID = value;
					this.SendPropertyChanged("DispatcherNIIAR_StatusDoneID");
					this.OnDispatcherNIIAR_StatusDoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatcherATA_StatusDoneID", DbType="Int NOT NULL")]
		public int DispatcherATA_StatusDoneID
		{
			get
			{
				return this._DispatcherATA_StatusDoneID;
			}
			set
			{
				if ((this._DispatcherATA_StatusDoneID != value))
				{
					if (this._StatusesDone4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispatcherATA_StatusDoneIDChanging(value);
					this.SendPropertyChanging();
					this._DispatcherATA_StatusDoneID = value;
					this.SendPropertyChanged("DispatcherATA_StatusDoneID");
					this.OnDispatcherATA_StatusDoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectionApplicationJoin", DbType="Bit")]
		public System.Nullable<bool> SelectionApplicationJoin
		{
			get
			{
				return this._SelectionApplicationJoin;
			}
			set
			{
				if ((this._SelectionApplicationJoin != value))
				{
					this.OnSelectionApplicationJoinChanging(value);
					this.SendPropertyChanging();
					this._SelectionApplicationJoin = value;
					this.SendPropertyChanged("SelectionApplicationJoin");
					this.OnSelectionApplicationJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationJoin", DbType="VarChar(100)")]
		public string ApplicationJoin
		{
			get
			{
				return this._ApplicationJoin;
			}
			set
			{
				if ((this._ApplicationJoin != value))
				{
					this.OnApplicationJoinChanging(value);
					this.SendPropertyChanging();
					this._ApplicationJoin = value;
					this.SendPropertyChanged("ApplicationJoin");
					this.OnApplicationJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cars_Applications", Storage="_Cars", ThisKey="CarID", OtherKey="Id", IsForeignKey=true)]
		public Cars Cars
		{
			get
			{
				return this._Cars.Entity;
			}
			set
			{
				Cars previousValue = this._Cars.Entity;
				if (((previousValue != value) 
							|| (this._Cars.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cars.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._Cars.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._CarID = value.Id;
					}
					else
					{
						this._CarID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cars");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications", Storage="_StatusesDone", ThisKey="DirectorStatusDoneID", OtherKey="Id", IsForeignKey=true)]
		public StatusesDone StatusesDone
		{
			get
			{
				return this._StatusesDone.Entity;
			}
			set
			{
				StatusesDone previousValue = this._StatusesDone.Entity;
				if (((previousValue != value) 
							|| (this._StatusesDone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusesDone.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._StatusesDone.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._DirectorStatusDoneID = value.Id;
					}
					else
					{
						this._DirectorStatusDoneID = default(int);
					}
					this.SendPropertyChanged("StatusesDone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications1", Storage="_StatusesDone1", ThisKey="EconomistStatusDoneID", OtherKey="Id", IsForeignKey=true)]
		public StatusesDone StatusesDone1
		{
			get
			{
				return this._StatusesDone1.Entity;
			}
			set
			{
				StatusesDone previousValue = this._StatusesDone1.Entity;
				if (((previousValue != value) 
							|| (this._StatusesDone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusesDone1.Entity = null;
						previousValue.Applications1.Remove(this);
					}
					this._StatusesDone1.Entity = value;
					if ((value != null))
					{
						value.Applications1.Add(this);
						this._EconomistStatusDoneID = value.Id;
					}
					else
					{
						this._EconomistStatusDoneID = default(int);
					}
					this.SendPropertyChanged("StatusesDone1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications2", Storage="_StatusesDone2", ThisKey="DispatcherNIIAR_StatusDoneID", OtherKey="Id", IsForeignKey=true)]
		public StatusesDone StatusesDone2
		{
			get
			{
				return this._StatusesDone2.Entity;
			}
			set
			{
				StatusesDone previousValue = this._StatusesDone2.Entity;
				if (((previousValue != value) 
							|| (this._StatusesDone2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusesDone2.Entity = null;
						previousValue.Applications2.Remove(this);
					}
					this._StatusesDone2.Entity = value;
					if ((value != null))
					{
						value.Applications2.Add(this);
						this._DispatcherNIIAR_StatusDoneID = value.Id;
					}
					else
					{
						this._DispatcherNIIAR_StatusDoneID = default(int);
					}
					this.SendPropertyChanged("StatusesDone2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications3", Storage="_StatusesDone3", ThisKey="DepartmentStatusDoneID", OtherKey="Id", IsForeignKey=true)]
		public StatusesDone StatusesDone3
		{
			get
			{
				return this._StatusesDone3.Entity;
			}
			set
			{
				StatusesDone previousValue = this._StatusesDone3.Entity;
				if (((previousValue != value) 
							|| (this._StatusesDone3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusesDone3.Entity = null;
						previousValue.Applications3.Remove(this);
					}
					this._StatusesDone3.Entity = value;
					if ((value != null))
					{
						value.Applications3.Add(this);
						this._DepartmentStatusDoneID = value.Id;
					}
					else
					{
						this._DepartmentStatusDoneID = default(int);
					}
					this.SendPropertyChanged("StatusesDone3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications4", Storage="_StatusesDone4", ThisKey="DispatcherATA_StatusDoneID", OtherKey="Id", IsForeignKey=true)]
		public StatusesDone StatusesDone4
		{
			get
			{
				return this._StatusesDone4.Entity;
			}
			set
			{
				StatusesDone previousValue = this._StatusesDone4.Entity;
				if (((previousValue != value) 
							|| (this._StatusesDone4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusesDone4.Entity = null;
						previousValue.Applications4.Remove(this);
					}
					this._StatusesDone4.Entity = value;
					if ((value != null))
					{
						value.Applications4.Add(this);
						this._DispatcherATA_StatusDoneID = value.Id;
					}
					else
					{
						this._DispatcherATA_StatusDoneID = default(int);
					}
					this.SendPropertyChanged("StatusesDone4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeCars_Applications", Storage="_TypeCars", ThisKey="TypeCarID", OtherKey="Id", IsForeignKey=true)]
		public TypeCars TypeCars
		{
			get
			{
				return this._TypeCars.Entity;
			}
			set
			{
				TypeCars previousValue = this._TypeCars.Entity;
				if (((previousValue != value) 
							|| (this._TypeCars.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeCars.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._TypeCars.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._TypeCarID = value.Id;
					}
					else
					{
						this._TypeCarID = default(int);
					}
					this.SendPropertyChanged("TypeCars");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Applications", Storage="_Users", ThisKey="UserID", OtherKey="Id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._UserID = value.Id;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cars")]
	public partial class Cars : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TypeCarID;
		
		private int _ModelCarID;
		
		private string _RegisterSign;
		
		private int _StatusCarID;
		
		private string _ImageMimeType;
		
		private EntitySet<Applications> _Applications;
		
		private EntityRef<ModelCars> _ModelCars;
		
		private EntityRef<StatusCars> _StatusCars;
		
		private EntityRef<TypeCars> _TypeCars;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeCarIDChanging(int value);
    partial void OnTypeCarIDChanged();
    partial void OnModelCarIDChanging(int value);
    partial void OnModelCarIDChanged();
    partial void OnRegisterSignChanging(string value);
    partial void OnRegisterSignChanged();
    partial void OnStatusCarIDChanging(int value);
    partial void OnStatusCarIDChanged();
    partial void OnImageMimeTypeChanging(string value);
    partial void OnImageMimeTypeChanged();
    #endregion
		
		public Cars()
		{
			this._Applications = new EntitySet<Applications>(new Action<Applications>(this.attach_Applications), new Action<Applications>(this.detach_Applications));
			this._ModelCars = default(EntityRef<ModelCars>);
			this._StatusCars = default(EntityRef<StatusCars>);
			this._TypeCars = default(EntityRef<TypeCars>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCarID", DbType="Int NOT NULL")]
		public int TypeCarID
		{
			get
			{
				return this._TypeCarID;
			}
			set
			{
				if ((this._TypeCarID != value))
				{
					if (this._TypeCars.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeCarIDChanging(value);
					this.SendPropertyChanging();
					this._TypeCarID = value;
					this.SendPropertyChanged("TypeCarID");
					this.OnTypeCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelCarID", DbType="Int NOT NULL")]
		public int ModelCarID
		{
			get
			{
				return this._ModelCarID;
			}
			set
			{
				if ((this._ModelCarID != value))
				{
					if (this._ModelCars.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModelCarIDChanging(value);
					this.SendPropertyChanging();
					this._ModelCarID = value;
					this.SendPropertyChanged("ModelCarID");
					this.OnModelCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterSign", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string RegisterSign
		{
			get
			{
				return this._RegisterSign;
			}
			set
			{
				if ((this._RegisterSign != value))
				{
					this.OnRegisterSignChanging(value);
					this.SendPropertyChanging();
					this._RegisterSign = value;
					this.SendPropertyChanged("RegisterSign");
					this.OnRegisterSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCarID", DbType="Int NOT NULL")]
		public int StatusCarID
		{
			get
			{
				return this._StatusCarID;
			}
			set
			{
				if ((this._StatusCarID != value))
				{
					if (this._StatusCars.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusCarIDChanging(value);
					this.SendPropertyChanging();
					this._StatusCarID = value;
					this.SendPropertyChanged("StatusCarID");
					this.OnStatusCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageMimeType", DbType="NVarChar(50)")]
		public string ImageMimeType
		{
			get
			{
				return this._ImageMimeType;
			}
			set
			{
				if ((this._ImageMimeType != value))
				{
					this.OnImageMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._ImageMimeType = value;
					this.SendPropertyChanged("ImageMimeType");
					this.OnImageMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cars_Applications", Storage="_Applications", ThisKey="Id", OtherKey="CarID")]
		public EntitySet<Applications> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModelCars_Cars", Storage="_ModelCars", ThisKey="ModelCarID", OtherKey="Id", IsForeignKey=true)]
		public ModelCars ModelCars
		{
			get
			{
				return this._ModelCars.Entity;
			}
			set
			{
				ModelCars previousValue = this._ModelCars.Entity;
				if (((previousValue != value) 
							|| (this._ModelCars.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModelCars.Entity = null;
						previousValue.Cars.Remove(this);
					}
					this._ModelCars.Entity = value;
					if ((value != null))
					{
						value.Cars.Add(this);
						this._ModelCarID = value.Id;
					}
					else
					{
						this._ModelCarID = default(int);
					}
					this.SendPropertyChanged("ModelCars");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusCars_Cars", Storage="_StatusCars", ThisKey="StatusCarID", OtherKey="Id", IsForeignKey=true)]
		public StatusCars StatusCars
		{
			get
			{
				return this._StatusCars.Entity;
			}
			set
			{
				StatusCars previousValue = this._StatusCars.Entity;
				if (((previousValue != value) 
							|| (this._StatusCars.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusCars.Entity = null;
						previousValue.Cars.Remove(this);
					}
					this._StatusCars.Entity = value;
					if ((value != null))
					{
						value.Cars.Add(this);
						this._StatusCarID = value.Id;
					}
					else
					{
						this._StatusCarID = default(int);
					}
					this.SendPropertyChanged("StatusCars");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeCars_Cars", Storage="_TypeCars", ThisKey="TypeCarID", OtherKey="Id", IsForeignKey=true)]
		public TypeCars TypeCars
		{
			get
			{
				return this._TypeCars.Entity;
			}
			set
			{
				TypeCars previousValue = this._TypeCars.Entity;
				if (((previousValue != value) 
							|| (this._TypeCars.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeCars.Entity = null;
						previousValue.Cars.Remove(this);
					}
					this._TypeCars.Entity = value;
					if ((value != null))
					{
						value.Cars.Add(this);
						this._TypeCarID = value.Id;
					}
					else
					{
						this._TypeCarID = default(int);
					}
					this.SendPropertyChanged("TypeCars");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Applications entity)
		{
			this.SendPropertyChanging();
			entity.Cars = this;
		}
		
		private void detach_Applications(Applications entity)
		{
			this.SendPropertyChanging();
			entity.Cars = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Divisions")]
	public partial class Divisions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Building;
		
		private EntitySet<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBuildingChanging(string value);
    partial void OnBuildingChanged();
    #endregion
		
		public Divisions()
		{
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this.OnBuildingChanging(value);
					this.SendPropertyChanging();
					this._Building = value;
					this.SendPropertyChanged("Building");
					this.OnBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Divisions_Users", Storage="_Users", ThisKey="Id", OtherKey="DivisionID")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Divisions = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Divisions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelCars")]
	public partial class ModelCars : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Cars> _Cars;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ModelCars()
		{
			this._Cars = new EntitySet<Cars>(new Action<Cars>(this.attach_Cars), new Action<Cars>(this.detach_Cars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModelCars_Cars", Storage="_Cars", ThisKey="Id", OtherKey="ModelCarID")]
		public EntitySet<Cars> Cars
		{
			get
			{
				return this._Cars;
			}
			set
			{
				this._Cars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cars(Cars entity)
		{
			this.SendPropertyChanging();
			entity.ModelCars = this;
		}
		
		private void detach_Cars(Cars entity)
		{
			this.SendPropertyChanging();
			entity.ModelCars = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusCars")]
	public partial class StatusCars : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Cars> _Cars;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StatusCars()
		{
			this._Cars = new EntitySet<Cars>(new Action<Cars>(this.attach_Cars), new Action<Cars>(this.detach_Cars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusCars_Cars", Storage="_Cars", ThisKey="Id", OtherKey="StatusCarID")]
		public EntitySet<Cars> Cars
		{
			get
			{
				return this._Cars;
			}
			set
			{
				this._Cars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cars(Cars entity)
		{
			this.SendPropertyChanging();
			entity.StatusCars = this;
		}
		
		private void detach_Cars(Cars entity)
		{
			this.SendPropertyChanging();
			entity.StatusCars = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Statuses")]
	public partial class Statuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Statuses()
		{
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statuses_Users", Storage="_Users", ThisKey="Id", OtherKey="StatusID")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Statuses = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Statuses = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusesDone")]
	public partial class StatusesDone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Applications> _Applications;
		
		private EntitySet<Applications> _Applications1;
		
		private EntitySet<Applications> _Applications2;
		
		private EntitySet<Applications> _Applications3;
		
		private EntitySet<Applications> _Applications4;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StatusesDone()
		{
			this._Applications = new EntitySet<Applications>(new Action<Applications>(this.attach_Applications), new Action<Applications>(this.detach_Applications));
			this._Applications1 = new EntitySet<Applications>(new Action<Applications>(this.attach_Applications1), new Action<Applications>(this.detach_Applications1));
			this._Applications2 = new EntitySet<Applications>(new Action<Applications>(this.attach_Applications2), new Action<Applications>(this.detach_Applications2));
			this._Applications3 = new EntitySet<Applications>(new Action<Applications>(this.attach_Applications3), new Action<Applications>(this.detach_Applications3));
			this._Applications4 = new EntitySet<Applications>(new Action<Applications>(this.attach_Applications4), new Action<Applications>(this.detach_Applications4));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications", Storage="_Applications", ThisKey="Id", OtherKey="DirectorStatusDoneID")]
		public EntitySet<Applications> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications1", Storage="_Applications1", ThisKey="Id", OtherKey="EconomistStatusDoneID")]
		public EntitySet<Applications> Applications1
		{
			get
			{
				return this._Applications1;
			}
			set
			{
				this._Applications1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications2", Storage="_Applications2", ThisKey="Id", OtherKey="DispatcherNIIAR_StatusDoneID")]
		public EntitySet<Applications> Applications2
		{
			get
			{
				return this._Applications2;
			}
			set
			{
				this._Applications2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications3", Storage="_Applications3", ThisKey="Id", OtherKey="DepartmentStatusDoneID")]
		public EntitySet<Applications> Applications3
		{
			get
			{
				return this._Applications3;
			}
			set
			{
				this._Applications3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusesDone_Applications4", Storage="_Applications4", ThisKey="Id", OtherKey="DispatcherATA_StatusDoneID")]
		public EntitySet<Applications> Applications4
		{
			get
			{
				return this._Applications4;
			}
			set
			{
				this._Applications4.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone = this;
		}
		
		private void detach_Applications(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone = null;
		}
		
		private void attach_Applications1(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone1 = this;
		}
		
		private void detach_Applications1(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone1 = null;
		}
		
		private void attach_Applications2(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone2 = this;
		}
		
		private void detach_Applications2(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone2 = null;
		}
		
		private void attach_Applications3(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone3 = this;
		}
		
		private void detach_Applications3(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone3 = null;
		}
		
		private void attach_Applications4(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone4 = this;
		}
		
		private void detach_Applications4(Applications entity)
		{
			this.SendPropertyChanging();
			entity.StatusesDone4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeCars")]
	public partial class TypeCars : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Applications> _Applications;
		
		private EntitySet<Cars> _Cars;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TypeCars()
		{
			this._Applications = new EntitySet<Applications>(new Action<Applications>(this.attach_Applications), new Action<Applications>(this.detach_Applications));
			this._Cars = new EntitySet<Cars>(new Action<Cars>(this.attach_Cars), new Action<Cars>(this.detach_Cars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeCars_Applications", Storage="_Applications", ThisKey="Id", OtherKey="TypeCarID")]
		public EntitySet<Applications> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeCars_Cars", Storage="_Cars", ThisKey="Id", OtherKey="TypeCarID")]
		public EntitySet<Cars> Cars
		{
			get
			{
				return this._Cars;
			}
			set
			{
				this._Cars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Applications entity)
		{
			this.SendPropertyChanging();
			entity.TypeCars = this;
		}
		
		private void detach_Applications(Applications entity)
		{
			this.SendPropertyChanging();
			entity.TypeCars = null;
		}
		
		private void attach_Cars(Cars entity)
		{
			this.SendPropertyChanging();
			entity.TypeCars = this;
		}
		
		private void detach_Cars(Cars entity)
		{
			this.SendPropertyChanging();
			entity.TypeCars = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _SurName;
		
		private string _Name;
		
		private string _Partonymic;
		
		private string _Post;
		
		private int _DivisionID;
		
		private int _Room;
		
		private string _WorkPhone;
		
		private string _MobilePhone;
		
		private int _StatusID;
		
		private EntitySet<Applications> _Applications;
		
		private EntityRef<Divisions> _Divisions;
		
		private EntityRef<Statuses> _Statuses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSurNameChanging(string value);
    partial void OnSurNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPartonymicChanging(string value);
    partial void OnPartonymicChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnDivisionIDChanging(int value);
    partial void OnDivisionIDChanged();
    partial void OnRoomChanging(int value);
    partial void OnRoomChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    #endregion
		
		public Users()
		{
			this._Applications = new EntitySet<Applications>(new Action<Applications>(this.attach_Applications), new Action<Applications>(this.detach_Applications));
			this._Divisions = default(EntityRef<Divisions>);
			this._Statuses = default(EntityRef<Statuses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SurName
		{
			get
			{
				return this._SurName;
			}
			set
			{
				if ((this._SurName != value))
				{
					this.OnSurNameChanging(value);
					this.SendPropertyChanging();
					this._SurName = value;
					this.SendPropertyChanged("SurName");
					this.OnSurNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partonymic", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Partonymic
		{
			get
			{
				return this._Partonymic;
			}
			set
			{
				if ((this._Partonymic != value))
				{
					this.OnPartonymicChanging(value);
					this.SendPropertyChanging();
					this._Partonymic = value;
					this.SendPropertyChanged("Partonymic");
					this.OnPartonymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionID", DbType="Int NOT NULL")]
		public int DivisionID
		{
			get
			{
				return this._DivisionID;
			}
			set
			{
				if ((this._DivisionID != value))
				{
					if (this._Divisions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivisionIDChanging(value);
					this.SendPropertyChanging();
					this._DivisionID = value;
					this.SendPropertyChanged("DivisionID");
					this.OnDivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="Int NOT NULL")]
		public int Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(50)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._Statuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Applications", Storage="_Applications", ThisKey="Id", OtherKey="UserID")]
		public EntitySet<Applications> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Divisions_Users", Storage="_Divisions", ThisKey="DivisionID", OtherKey="Id", IsForeignKey=true)]
		public Divisions Divisions
		{
			get
			{
				return this._Divisions.Entity;
			}
			set
			{
				Divisions previousValue = this._Divisions.Entity;
				if (((previousValue != value) 
							|| (this._Divisions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Divisions.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Divisions.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._DivisionID = value.Id;
					}
					else
					{
						this._DivisionID = default(int);
					}
					this.SendPropertyChanged("Divisions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Statuses_Users", Storage="_Statuses", ThisKey="StatusID", OtherKey="Id", IsForeignKey=true)]
		public Statuses Statuses
		{
			get
			{
				return this._Statuses.Entity;
			}
			set
			{
				Statuses previousValue = this._Statuses.Entity;
				if (((previousValue != value) 
							|| (this._Statuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Statuses.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Statuses.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._StatusID = value.Id;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("Statuses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Applications entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Applications(Applications entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationAgreedView")]
	public partial class ApplicationAgreedView
	{
		
		private int _Id;
		
		private string _Client;
		
		private string _Email;
		
		private string _Post;
		
		private string _Division;
		
		private string _Building;
		
		private int _Room;
		
		private string _Director;
		
		private string _Economist;
		
		private string _CPC;
		
		private System.Nullable<bool> _IntercityСity;
		
		private string _PurposeUsingTransport;
		
		private System.Nullable<bool> _DaysWorkerOrWeekend;
		
		private string _WorkPhone;
		
		private string _MobilePhone;
		
		private System.DateTime _DateCreation;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _TypeCar;
		
		private string _Model;
		
		private string _RegisterSign;
		
		private System.Nullable<int> _QuantityPassengers;
		
		private System.Nullable<double> _CargoWeight;
		
		private string _PlaceSubmission;
		
		private string _Route;
		
		private string _CommentClient;
		
		private string _СommentDirector;
		
		private string _СommentEconomist;
		
		private string _СommentDepartment;
		
		private string _СommentDispatcherNIIAR;
		
		private string _СommentDispatcherATA;
		
		private string _DirectorStatusDone;
		
		private string _EconomistStatusDone;
		
		private string _DepartmentStatusDone;
		
		private string _DispatcherNIIAR_StatusDone;
		
		private string _DispatcherATA_StatusDone;
		
		private System.Nullable<bool> _SelectionApplicationJoin;
		
		private string _ApplicationJoin;
		
		public ApplicationAgreedView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="VarChar(152) NOT NULL", CanBeNull=false)]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this._Client = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this._Post = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this._Division = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this._Building = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="Int NOT NULL")]
		public int Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this._Room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Director", DbType="VarChar(152) NOT NULL", CanBeNull=false)]
		public string Director
		{
			get
			{
				return this._Director;
			}
			set
			{
				if ((this._Director != value))
				{
					this._Director = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Economist", DbType="VarChar(152) NOT NULL", CanBeNull=false)]
		public string Economist
		{
			get
			{
				return this._Economist;
			}
			set
			{
				if ((this._Economist != value))
				{
					this._Economist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPC", DbType="NVarChar(50)")]
		public string CPC
		{
			get
			{
				return this._CPC;
			}
			set
			{
				if ((this._CPC != value))
				{
					this._CPC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntercityСity", DbType="Bit")]
		public System.Nullable<bool> IntercityСity
		{
			get
			{
				return this._IntercityСity;
			}
			set
			{
				if ((this._IntercityСity != value))
				{
					this._IntercityСity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeUsingTransport", DbType="VarChar(500)")]
		public string PurposeUsingTransport
		{
			get
			{
				return this._PurposeUsingTransport;
			}
			set
			{
				if ((this._PurposeUsingTransport != value))
				{
					this._PurposeUsingTransport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysWorkerOrWeekend", DbType="Bit")]
		public System.Nullable<bool> DaysWorkerOrWeekend
		{
			get
			{
				return this._DaysWorkerOrWeekend;
			}
			set
			{
				if ((this._DaysWorkerOrWeekend != value))
				{
					this._DaysWorkerOrWeekend = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(50)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this._WorkPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this._MobilePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this._DateCreation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCar", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeCar
		{
			get
			{
				return this._TypeCar;
			}
			set
			{
				if ((this._TypeCar != value))
				{
					this._TypeCar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterSign", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string RegisterSign
		{
			get
			{
				return this._RegisterSign;
			}
			set
			{
				if ((this._RegisterSign != value))
				{
					this._RegisterSign = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityPassengers", DbType="Int")]
		public System.Nullable<int> QuantityPassengers
		{
			get
			{
				return this._QuantityPassengers;
			}
			set
			{
				if ((this._QuantityPassengers != value))
				{
					this._QuantityPassengers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CargoWeight", DbType="Float")]
		public System.Nullable<double> CargoWeight
		{
			get
			{
				return this._CargoWeight;
			}
			set
			{
				if ((this._CargoWeight != value))
				{
					this._CargoWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceSubmission", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string PlaceSubmission
		{
			get
			{
				return this._PlaceSubmission;
			}
			set
			{
				if ((this._PlaceSubmission != value))
				{
					this._PlaceSubmission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this._Route = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentClient", DbType="VarChar(500)")]
		public string CommentClient
		{
			get
			{
				return this._CommentClient;
			}
			set
			{
				if ((this._CommentClient != value))
				{
					this._CommentClient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDirector", DbType="VarChar(500)")]
		public string СommentDirector
		{
			get
			{
				return this._СommentDirector;
			}
			set
			{
				if ((this._СommentDirector != value))
				{
					this._СommentDirector = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentEconomist", DbType="VarChar(500)")]
		public string СommentEconomist
		{
			get
			{
				return this._СommentEconomist;
			}
			set
			{
				if ((this._СommentEconomist != value))
				{
					this._СommentEconomist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDepartment", DbType="VarChar(500)")]
		public string СommentDepartment
		{
			get
			{
				return this._СommentDepartment;
			}
			set
			{
				if ((this._СommentDepartment != value))
				{
					this._СommentDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDispatcherNIIAR", DbType="VarChar(500)")]
		public string СommentDispatcherNIIAR
		{
			get
			{
				return this._СommentDispatcherNIIAR;
			}
			set
			{
				if ((this._СommentDispatcherNIIAR != value))
				{
					this._СommentDispatcherNIIAR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDispatcherATA", DbType="VarChar(500)")]
		public string СommentDispatcherATA
		{
			get
			{
				return this._СommentDispatcherATA;
			}
			set
			{
				if ((this._СommentDispatcherATA != value))
				{
					this._СommentDispatcherATA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorStatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DirectorStatusDone
		{
			get
			{
				return this._DirectorStatusDone;
			}
			set
			{
				if ((this._DirectorStatusDone != value))
				{
					this._DirectorStatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EconomistStatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EconomistStatusDone
		{
			get
			{
				return this._EconomistStatusDone;
			}
			set
			{
				if ((this._EconomistStatusDone != value))
				{
					this._EconomistStatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentStatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentStatusDone
		{
			get
			{
				return this._DepartmentStatusDone;
			}
			set
			{
				if ((this._DepartmentStatusDone != value))
				{
					this._DepartmentStatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatcherNIIAR_StatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DispatcherNIIAR_StatusDone
		{
			get
			{
				return this._DispatcherNIIAR_StatusDone;
			}
			set
			{
				if ((this._DispatcherNIIAR_StatusDone != value))
				{
					this._DispatcherNIIAR_StatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatcherATA_StatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DispatcherATA_StatusDone
		{
			get
			{
				return this._DispatcherATA_StatusDone;
			}
			set
			{
				if ((this._DispatcherATA_StatusDone != value))
				{
					this._DispatcherATA_StatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectionApplicationJoin", DbType="Bit")]
		public System.Nullable<bool> SelectionApplicationJoin
		{
			get
			{
				return this._SelectionApplicationJoin;
			}
			set
			{
				if ((this._SelectionApplicationJoin != value))
				{
					this._SelectionApplicationJoin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationJoin", DbType="VarChar(100)")]
		public string ApplicationJoin
		{
			get
			{
				return this._ApplicationJoin;
			}
			set
			{
				if ((this._ApplicationJoin != value))
				{
					this._ApplicationJoin = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationView")]
	public partial class ApplicationView
	{
		
		private int _Id;
		
		private string _Client;
		
		private string _Email;
		
		private string _Post;
		
		private string _Division;
		
		private string _Building;
		
		private int _Room;
		
		private string _Director;
		
		private string _Economist;
		
		private string _CPC;
		
		private System.Nullable<bool> _IntercityСity;
		
		private string _PurposeUsingTransport;
		
		private System.Nullable<bool> _DaysWorkerOrWeekend;
		
		private string _WorkPhone;
		
		private string _MobilePhone;
		
		private System.DateTime _DateCreation;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _TypeCar;
		
		private System.Nullable<int> _QuantityPassengers;
		
		private System.Nullable<double> _CargoWeight;
		
		private string _PlaceSubmission;
		
		private string _Route;
		
		private string _CommentClient;
		
		private string _СommentDirector;
		
		private string _СommentEconomist;
		
		private string _СommentDepartment;
		
		private string _СommentDispatcherNIIAR;
		
		private string _СommentDispatcherATA;
		
		private string _DirectorStatusDone;
		
		private string _EconomistStatusDone;
		
		private string _DepartmentStatusDone;
		
		private string _DispatcherNIIAR_StatusDone;
		
		private string _DispatcherATA_StatusDone;
		
		private System.Nullable<bool> _SelectionApplicationJoin;
		
		private string _ApplicationJoin;
		
		public ApplicationView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="VarChar(152) NOT NULL", CanBeNull=false)]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this._Client = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this._Post = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this._Division = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this._Building = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="Int NOT NULL")]
		public int Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this._Room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Director", DbType="VarChar(152) NOT NULL", CanBeNull=false)]
		public string Director
		{
			get
			{
				return this._Director;
			}
			set
			{
				if ((this._Director != value))
				{
					this._Director = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Economist", DbType="VarChar(152) NOT NULL", CanBeNull=false)]
		public string Economist
		{
			get
			{
				return this._Economist;
			}
			set
			{
				if ((this._Economist != value))
				{
					this._Economist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPC", DbType="NVarChar(50)")]
		public string CPC
		{
			get
			{
				return this._CPC;
			}
			set
			{
				if ((this._CPC != value))
				{
					this._CPC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntercityСity", DbType="Bit")]
		public System.Nullable<bool> IntercityСity
		{
			get
			{
				return this._IntercityСity;
			}
			set
			{
				if ((this._IntercityСity != value))
				{
					this._IntercityСity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeUsingTransport", DbType="VarChar(500)")]
		public string PurposeUsingTransport
		{
			get
			{
				return this._PurposeUsingTransport;
			}
			set
			{
				if ((this._PurposeUsingTransport != value))
				{
					this._PurposeUsingTransport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysWorkerOrWeekend", DbType="Bit")]
		public System.Nullable<bool> DaysWorkerOrWeekend
		{
			get
			{
				return this._DaysWorkerOrWeekend;
			}
			set
			{
				if ((this._DaysWorkerOrWeekend != value))
				{
					this._DaysWorkerOrWeekend = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(50)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this._WorkPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this._MobilePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreation
		{
			get
			{
				return this._DateCreation;
			}
			set
			{
				if ((this._DateCreation != value))
				{
					this._DateCreation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCar", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeCar
		{
			get
			{
				return this._TypeCar;
			}
			set
			{
				if ((this._TypeCar != value))
				{
					this._TypeCar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityPassengers", DbType="Int")]
		public System.Nullable<int> QuantityPassengers
		{
			get
			{
				return this._QuantityPassengers;
			}
			set
			{
				if ((this._QuantityPassengers != value))
				{
					this._QuantityPassengers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CargoWeight", DbType="Float")]
		public System.Nullable<double> CargoWeight
		{
			get
			{
				return this._CargoWeight;
			}
			set
			{
				if ((this._CargoWeight != value))
				{
					this._CargoWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceSubmission", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string PlaceSubmission
		{
			get
			{
				return this._PlaceSubmission;
			}
			set
			{
				if ((this._PlaceSubmission != value))
				{
					this._PlaceSubmission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this._Route = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentClient", DbType="VarChar(500)")]
		public string CommentClient
		{
			get
			{
				return this._CommentClient;
			}
			set
			{
				if ((this._CommentClient != value))
				{
					this._CommentClient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDirector", DbType="VarChar(500)")]
		public string СommentDirector
		{
			get
			{
				return this._СommentDirector;
			}
			set
			{
				if ((this._СommentDirector != value))
				{
					this._СommentDirector = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentEconomist", DbType="VarChar(500)")]
		public string СommentEconomist
		{
			get
			{
				return this._СommentEconomist;
			}
			set
			{
				if ((this._СommentEconomist != value))
				{
					this._СommentEconomist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDepartment", DbType="VarChar(500)")]
		public string СommentDepartment
		{
			get
			{
				return this._СommentDepartment;
			}
			set
			{
				if ((this._СommentDepartment != value))
				{
					this._СommentDepartment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDispatcherNIIAR", DbType="VarChar(500)")]
		public string СommentDispatcherNIIAR
		{
			get
			{
				return this._СommentDispatcherNIIAR;
			}
			set
			{
				if ((this._СommentDispatcherNIIAR != value))
				{
					this._СommentDispatcherNIIAR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СommentDispatcherATA", DbType="VarChar(500)")]
		public string СommentDispatcherATA
		{
			get
			{
				return this._СommentDispatcherATA;
			}
			set
			{
				if ((this._СommentDispatcherATA != value))
				{
					this._СommentDispatcherATA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorStatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DirectorStatusDone
		{
			get
			{
				return this._DirectorStatusDone;
			}
			set
			{
				if ((this._DirectorStatusDone != value))
				{
					this._DirectorStatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EconomistStatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EconomistStatusDone
		{
			get
			{
				return this._EconomistStatusDone;
			}
			set
			{
				if ((this._EconomistStatusDone != value))
				{
					this._EconomistStatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentStatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentStatusDone
		{
			get
			{
				return this._DepartmentStatusDone;
			}
			set
			{
				if ((this._DepartmentStatusDone != value))
				{
					this._DepartmentStatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatcherNIIAR_StatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DispatcherNIIAR_StatusDone
		{
			get
			{
				return this._DispatcherNIIAR_StatusDone;
			}
			set
			{
				if ((this._DispatcherNIIAR_StatusDone != value))
				{
					this._DispatcherNIIAR_StatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatcherATA_StatusDone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DispatcherATA_StatusDone
		{
			get
			{
				return this._DispatcherATA_StatusDone;
			}
			set
			{
				if ((this._DispatcherATA_StatusDone != value))
				{
					this._DispatcherATA_StatusDone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectionApplicationJoin", DbType="Bit")]
		public System.Nullable<bool> SelectionApplicationJoin
		{
			get
			{
				return this._SelectionApplicationJoin;
			}
			set
			{
				if ((this._SelectionApplicationJoin != value))
				{
					this._SelectionApplicationJoin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationJoin", DbType="VarChar(100)")]
		public string ApplicationJoin
		{
			get
			{
				return this._ApplicationJoin;
			}
			set
			{
				if ((this._ApplicationJoin != value))
				{
					this._ApplicationJoin = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarModelView")]
	public partial class CarModelView
	{
		
		private int _Id;
		
		private string _TypeCar;
		
		private string _Model;
		
		private string _RegisterSign;
		
		private string _StatusCar;
		
		private string _ImageData;
		
		public CarModelView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCar", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeCar
		{
			get
			{
				return this._TypeCar;
			}
			set
			{
				if ((this._TypeCar != value))
				{
					this._TypeCar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterSign", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string RegisterSign
		{
			get
			{
				return this._RegisterSign;
			}
			set
			{
				if ((this._RegisterSign != value))
				{
					this._RegisterSign = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCar", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusCar
		{
			get
			{
				return this._StatusCar;
			}
			set
			{
				if ((this._StatusCar != value))
				{
					this._StatusCar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageData", DbType="NVarChar(50)")]
		public string ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this._ImageData = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarView")]
	public partial class CarView
	{
		
		private int _Id;
		
		private string _TypeCar;
		
		private string _Model;
		
		private string _RegisterSign;
		
		private string _StatusCar;
		
		public CarView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCar", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeCar
		{
			get
			{
				return this._TypeCar;
			}
			set
			{
				if ((this._TypeCar != value))
				{
					this._TypeCar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterSign", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string RegisterSign
		{
			get
			{
				return this._RegisterSign;
			}
			set
			{
				if ((this._RegisterSign != value))
				{
					this._RegisterSign = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCar", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusCar
		{
			get
			{
				return this._StatusCar;
			}
			set
			{
				if ((this._StatusCar != value))
				{
					this._StatusCar = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelCarView")]
	public partial class ModelCarView
	{
		
		private int _Id;
		
		private string _Model;
		
		public ModelCarView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DivisionView")]
	public partial class DivisionView
	{
		
		private int _Id;
		
		private string _Division;
		
		private string _Building;
		
		public DivisionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this._Division = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this._Building = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeCarView")]
	public partial class TypeCarView
	{
		
		private int _Id;
		
		private string _TypeCar;
		
		public TypeCarView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCar", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeCar
		{
			get
			{
				return this._TypeCar;
			}
			set
			{
				if ((this._TypeCar != value))
				{
					this._TypeCar = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserView")]
	public partial class UserView
	{
		
		private int _Id;
		
		private string _Email;
		
		private string _Customer;
		
		private string _Post;
		
		private string _Division;
		
		private string _Building;
		
		private int _Room;
		
		private string _WorkPhone;
		
		private string _MobilePhone;
		
		private string _Status;
		
		public UserView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="VarChar(152) NOT NULL", CanBeNull=false)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this._Post = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this._Division = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this._Building = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="Int NOT NULL")]
		public int Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this._Room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(50)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this._WorkPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this._MobilePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
